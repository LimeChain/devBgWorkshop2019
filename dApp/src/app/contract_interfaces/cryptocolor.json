{
  "contractName": "CryptoColor",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getColorFromId",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610165578063081812fc146101f5578063095ea7b3146102625780631249c58b146102af57806318160ddd146102c657806323b872dd146102f15780632f745c591461035e57806342842e0e146103bf5780634f6ccce71461042c5780636352211e1461046d57806367eeca96146104da57806370a082311461053b57806395d89b4114610592578063a22cb46514610622578063b88d4fde14610671578063c87b56dd14610724578063e985e9c5146107ca575b600080fd5b34801561010d57600080fd5b5061014b60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610845565b604051808215151515815260200191505060405180910390f35b34801561017157600080fd5b5061017a6108ac565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ba57808201518184015260208101905061019f565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020157600080fd5b506102206004803603810190808035906020019092919050505061094e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026e57600080fd5b506102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099f565b005b3480156102bb57600080fd5b506102c4610ae4565b005b3480156102d257600080fd5b506102db610bbd565b6040518082815260200191505060405180910390f35b3480156102fd57600080fd5b5061035c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bca565b005b34801561036a57600080fd5b506103a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c99565b6040518082815260200191505060405180910390f35b3480156103cb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d10565b005b34801561043857600080fd5b5061045760048036038101908080359060200190929190505050610d31565b6040518082815260200191505060405180910390f35b34801561047957600080fd5b5061049860048036038101908080359060200190929190505050610d69565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e657600080fd5b5061050560048036038101908080359060200190929190505050610de7565b604051808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff168152602001935050505060405180910390f35b34801561054757600080fd5b5061057c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e77565b6040518082815260200191505060405180910390f35b34801561059e57600080fd5b506105a7610efb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e75780820151818401526020810190506105cc565b50505050905090810190601f1680156106145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561062e57600080fd5b5061066f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f9d565b005b34801561067d57600080fd5b50610722600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506110d9565b005b34801561073057600080fd5b5061074f60048036038101908080359060200190929190505050611101565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078f578082015181840152602081019050610774565b50505050905090810190601f1680156107bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107d657600080fd5b5061082b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ca565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050905090565b60006109598261125e565b151561096457600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109aa82610d69565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109e757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a275750610a2681336111ca565b5b1515610a3257600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610aec611cf8565b60006060604051908101604052804260ff1681526020016064420360ff16815260200160c8420360ff1681525091506001600c8390806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff1602179055505050039050610bb933826112d0565b5050565b6000600780549050905090565b610bd43382611327565b1515610bdf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c1b57600080fd5b610c2583826113bc565b610c2f83826114bf565b610c39828261167b565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610ca483610e77565b82101515610cb157600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610cfd57fe5b9060005260206000200154905092915050565b610d2c83838360206040519081016040528060008152506110d9565b505050565b6000610d3b610bbd565b82101515610d4857600080fd5b600782815481101515610d5757fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610dde57600080fd5b80915050919050565b6000806000600c84815481101515610dfb57fe5b9060005260206000200160000160009054906101000a900460ff16600c85815481101515610e2557fe5b9060005260206000200160000160019054906101000a900460ff16600c86815481101515610e4f57fe5b9060005260206000200160000160029054906101000a900460ff169250925092509193909250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eb457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f935780601f10610f6857610100808354040283529160200191610f93565b820191906000526020600020905b815481529060010190602001808311610f7657829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fd857600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6110e4848484610bca565b6110f084848484611752565b15156110fb57600080fd5b50505050565b606061110c8261125e565b151561111757600080fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111be5780601f10611193576101008083540402835291602001916111be565b820191906000526020600020905b8154815290600101906020018083116111a157829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6112da8282611974565b600780549050600860008381526020019081526020016000208190555060078190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008061133383610d69565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113a257508373ffffffffffffffffffffffffffffffffffffffff1661138a8461094e565b73ffffffffffffffffffffffffffffffffffffffff16145b806113b357506113b281856111ca565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166113dc82610d69565b73ffffffffffffffffffffffffffffffffffffffff161415156113fe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114bb5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008060006114ce8585611a1a565b6006600085815260200190815260200160002054925061153a6001600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611b4990919063ffffffff16565b9150600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561158857fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156115e257fe5b9060005260206000200181905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036116429190611d23565b50600060066000868152602001908152602001600020819055508260066000838152602001908152602001600020819055505050505050565b60006116878383611b6a565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806006600084815260200190815260200160002081905550505050565b6000806117748573ffffffffffffffffffffffffffffffffffffffff16611cc4565b1515611783576001915061196b565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561187857808201518184015260208101905061185d565b50505050905090810190601f1680156118a55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156118c757600080fd5b505af11580156118db573d6000803e3d6000fd5b505050506040513d60208110156118f157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119b057600080fd5b6119ba828261167b565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff16611a3a82610d69565b73ffffffffffffffffffffffffffffffffffffffff16141515611a5c57600080fd5b611aaf6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b4990919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080838311151515611b5b57600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611bd857600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c7d6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cd790919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6000808284019050838110151515611cee57600080fd5b8091505092915050565b606060405190810160405280600060ff168152602001600060ff168152602001600060ff1681525090565b815481835581811115611d4a57818360005260206000209182019101611d499190611d4f565b5b505050565b611d7191905b80821115611d6d576000816000905550600101611d55565b5090565b905600a165627a7a7230582012a4fc0a01ab9ab71e440f4dd8db1e8a4a608f9d3ce03771a7e06028ace2724e0029",
  "sourceMap": "97:565:0:-;;;138:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:62:0;473:87:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;528:4;534:6;612:39:2;235:10;631:19;;612:18;;;:39;;;:::i;:::-;1832::5;1136:10;1851:19;;1832:18;;;:39;;;:::i;:::-;1026:49:6;676:10;1045:29;;1026:18;;;:49;;;:::i;:::-;685:4:8;677:5;:12;;;;;;;;;;;;:::i;:::-;;705:6;695:7;:16;;;;;;;;;;;;:::i;:::-;;791:46;412:10;810:26;;791:18;;;:46;;;:::i;:::-;624:218;;473:87:7;;97:565:0;;951:154:2;1043:10;1028:25;;:11;:25;;;;;1020:34;;;;;;;;1096:4;1060:20;:33;1081:11;1060:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;951:154;:::o;97:565:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "97:565:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:141:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:141:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:70:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;936:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:141:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:141:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2985:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2985:270:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;313:191:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:191:0;;;;;;1779:88:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1779:88:6;;;;;;;;;;;;;;;;;;;;;;;5031:326:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5031:326:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:198:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1439:198:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5970:193:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5970:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2190:138:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2190:138:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:163:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2419:163:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:150:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:140:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2067:140:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:74:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1104:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3945:199:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3945:199:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6842:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6842:265:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:134:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1365:134:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1365:134:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4451:165:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4451:165:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:141:2;821:4;842:20;:33;863:11;842:33;;;;;;;;;;;;;;;;;;;;;;;;;;;835:40;;739:141;;;:::o;936:70:8:-;975:6;996:5;989:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:70;:::o;3526:141:5:-;3585:7;3608:16;3616:7;3608;:16::i;:::-;3600:25;;;;;;;;3638:15;:24;3654:7;3638:24;;;;;;;;;;;;;;;;;;;;;3631:31;;3526:141;;;:::o;2985:270::-;3044:13;3060:16;3068:7;3060;:16::i;:::-;3044:32;;3096:5;3090:11;;:2;:11;;;;3082:20;;;;;;;;3130:5;3116:19;;:10;:19;;;:58;;;;3139:35;3156:5;3163:10;3139:16;:35::i;:::-;3116:58;3108:67;;;;;;;;3209:2;3182:15;:24;3198:7;3182:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3242:7;3238:2;3222:28;;3231:5;3222:28;;;;;;;;;;;;2985:270;;;:::o;313:191:0:-;346:19;;:::i;:::-;431:8;368:53;;;;;;;;;380:3;368:53;;;;;;399:3;392;386:16;368:53;;;;;;417:3;410;404:16;368:53;;;;;346:75;;464:1;442:6;454;442:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;442:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;431:34;;475:22;481:10;493:3;475:5;:22::i;:::-;313:191;;:::o;1779:88:6:-;1823:7;1845:10;:17;;;;1838:24;;1779:88;:::o;5031:326:5:-;5139:39;5158:10;5170:7;5139:18;:39::i;:::-;5131:48;;;;;;;;5207:1;5193:16;;:2;:16;;;;5185:25;;;;;;;;5217:29;5232:4;5238:7;5217:14;:29::i;:::-;5252:31;5269:4;5275:7;5252:16;:31::i;:::-;5289:24;5301:2;5305:7;5289:11;:24::i;:::-;5344:7;5340:2;5325:27;;5334:4;5325:27;;;;;;;;;;;;5031:326;;;:::o;1439:198:6:-;1543:7;1576:16;1586:5;1576:9;:16::i;:::-;1568:5;:24;1560:33;;;;;;;;1606:12;:19;1619:5;1606:19;;;;;;;;;;;;;;;1626:5;1606:26;;;;;;;;;;;;;;;;;;1599:33;;1439:198;;;;:::o;5970:193:5:-;6119:39;6136:4;6142:2;6146:7;6119:39;;;;;;;;;;;;;:16;:39::i;:::-;5970:193;;;:::o;2190:138:6:-;2248:7;2279:13;:11;:13::i;:::-;2271:5;:21;2263:30;;;;;;;;2306:10;2317:5;2306:17;;;;;;;;;;;;;;;;;;2299:24;;2190:138;;;:::o;2419:163:5:-;2474:7;2489:13;2505:11;:20;2517:7;2505:20;;;;;;;;;;;;;;;;;;;;;2489:36;;2556:1;2539:19;;:5;:19;;;;2531:28;;;;;;;;2572:5;2565:12;;2419:163;;;;:::o;510:150:0:-;564:5;571;578;603:6;610:2;603:10;;;;;;;;;;;;;;;;;:14;;;;;;;;;;;;619:6;626:2;619:10;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;637:6;644:2;637:10;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;595:58;;;;;;510:150;;;;;:::o;2067:140:5:-;2122:7;2162:1;2145:19;;:5;:19;;;;2137:28;;;;;;;;2178:17;:24;2196:5;2178:24;;;;;;;;;;;;;;;;2171:31;;2067:140;;;:::o;1104:74:8:-;1145:6;1166:7;1159:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:74;:::o;3945:199:5:-;4026:10;4020:16;;:2;:16;;;;4012:25;;;;;;;;4080:8;4043:18;:30;4062:10;4043:30;;;;;;;;;;;;;;;:34;4074:2;4043:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4126:2;4099:40;;4114:10;4099:40;;;4130:8;4099:40;;;;;;;;;;;;;;;;;;;;;;3945:199;;:::o;6842:265::-;6963:31;6976:4;6982:2;6986:7;6963:12;:31::i;:::-;7053:48;7076:4;7082:2;7086:7;7095:5;7053:22;:48::i;:::-;7045:57;;;;;;;;6842:265;;;;:::o;1365:134:8:-;1423:6;1445:16;1453:7;1445;:16::i;:::-;1437:25;;;;;;;;1475:10;:19;1486:7;1475:19;;;;;;;;;;;1468:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:134;;;:::o;4451:165:5:-;4555:4;4576:18;:25;4595:5;4576:25;;;;;;;;;;;;;;;:35;4602:8;4576:35;;;;;;;;;;;;;;;;;;;;;;;;;4569:42;;4451:165;;;;:::o;7284:142::-;7341:4;7353:13;7369:11;:20;7381:7;7369:20;;;;;;;;;;;;;;;;;;;;;7353:36;;7419:1;7402:19;;:5;:19;;;;7395:26;;7284:142;;;;:::o;4796:169:6:-;4855:24;4867:2;4871:7;4855:11;:24::i;:::-;4913:10;:17;;;;4886:15;:24;4902:7;4886:24;;;;;;;;;;;:44;;;;4936:10;4952:7;4936:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4936:24:6;;;;;;;;;;;;;;;;;;;;;;4796:169;;:::o;7771:432:5:-;7880:4;7894:13;7910:16;7918:7;7910;:16::i;:::-;7894:32;;8104:5;8093:16;;:7;:16;;;:57;;;;8143:7;8119:31;;:20;8131:7;8119:11;:20::i;:::-;:31;;;8093:57;:99;;;;8160:32;8177:5;8184:7;8160:16;:32::i;:::-;8093:99;8078:120;;7771:432;;;;;:::o;11449:210::-;11547:5;11527:25;;:16;11535:7;11527;:16::i;:::-;:25;;;11519:34;;;;;;;;11599:1;11563:38;;:15;:24;11579:7;11563:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11559:96;;;11646:1;11611:15;:24;11627:7;11611:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11559:96;11449:210;;:::o;3517:1020:6:-;3770:18;3823:22;3886:17;3589:37;3612:4;3618:7;3589:22;:37::i;:::-;3791:17;:26;3809:7;3791:26;;;;;;;;;;;;3770:47;;3848:32;3878:1;3848:12;:18;3861:4;3848:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;3823:57;;3906:12;:18;3919:4;3906:18;;;;;;;;;;;;;;;3925:14;3906:34;;;;;;;;;;;;;;;;;;3886:54;;3980:9;3947:12;:18;3960:4;3947:18;;;;;;;;;;;;;;;3966:10;3947:30;;;;;;;;;;;;;;;;;:42;;;;4067:12;:18;4080:4;4067:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;4484:1;4455:17;:26;4473:7;4455:26;;;;;;;;;;;:30;;;;4522:10;4491:17;:28;4509:9;4491:28;;;;;;;;;;;:41;;;;3517:1020;;;;;:::o;2786:223::-;2887:14;2851:30;2869:2;2873:7;2851:17;:30::i;:::-;2904:12;:16;2917:2;2904:16;;;;;;;;;;;;;;;:23;;;;2887:40;;2933:12;:16;2946:2;2933:16;;;;;;;;;;;;;;;2955:7;2933:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2933:30:6;;;;;;;;;;;;;;;;;;;;;;2998:6;2969:17;:26;2987:7;2969:26;;;;;;;;;;;:35;;;;2786:223;;;:::o;10850:340:5:-;10984:4;11051:13;11003:15;:2;:13;;;:15::i;:::-;11002:16;10998:48;;;11035:4;11028:11;;;;10998:48;11083:2;11067:36;;;11111:10;11123:4;11129:7;11138:5;11067:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11067:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11067:77:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11067:77:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11067:77:5;;;;;;;;;;;;;;;;11051:93;;650:10;11168:16;;11158:26;;;:6;:26;;;;11150:35;;10850:340;;;;;;;;:::o;8450:163::-;8531:1;8517:16;;:2;:16;;;;8509:25;;;;;;;;8540:24;8552:2;8556:7;8540:11;:24::i;:::-;8600:7;8596:2;8575:33;;8592:1;8575:33;;;;;;;;;;;;8450:163;;:::o;10136:211::-;10236:4;10216:24;;:16;10224:7;10216;:16::i;:::-;:24;;;10208:33;;;;;;;;10273:30;10301:1;10273:17;:23;10291:4;10273:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10247:17;:23;10265:4;10247:23;;;;;;;;;;;;;;;:56;;;;10340:1;10309:11;:20;10321:7;10309:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;10136:211;;:::o;1078:131:4:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;9432:202:5:-;9537:1;9505:34;;:11;:20;9517:7;9505:20;;;;;;;;;;;;;;;;;;;;;:34;;;9497:43;;;;;;;;9569:2;9546:11;:20;9558:7;9546:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9601:28;9627:1;9601:17;:21;9619:2;9601:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9577:17;:21;9595:2;9577:21;;;;;;;;;;;;;;;:52;;;;9432:202;;:::o;449:582:13:-;509:4;521:12;996:7;984:20;976:28;;1025:1;1018:4;:8;1011:15;;449:582;;;;:::o;1272:131:4:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;97:565:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol';\n\ncontract CryptoColor is ERC721Full {\n    constructor () ERC721Full('CryptoColor', 'COL') public {\n    }\n\n    struct Color {\n        uint8 red;\n        uint8 green;\n        uint8 blue;\n    }\n\n    Color[] colors;\n\n    function mint() public {\n        Color memory _color = Color(uint8(now), uint8(now) - 100, uint8(now) - 200);\n        uint _id = colors.push(_color) - 1;\n        _mint(msg.sender, _id);\n    }\n\n    function getColorFromId(uint id) public view returns (uint8, uint8, uint8) {\n        return (colors[id].red, colors[id].green, colors[id].blue);\n    }\n}",
  "sourcePath": "/Users/vladislavivanov/Desktop/etherlime-workshop/contracts/CryptoColor.sol",
  "ast": {
    "absolutePath": "/Users/vladislavivanov/Desktop/etherlime-workshop/contracts/CryptoColor.sol",
    "exportedSymbols": {
      "CryptoColor": [
        86
      ]
    },
    "id": 87,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 1174,
        "src": "26:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1173,
              "src": "121:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1173",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "121:10:0"
          }
        ],
        "contractDependencies": [
          183,
          193,
          866,
          1149,
          1173,
          1300,
          1403,
          1430,
          1453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86,
          1173,
          1300,
          1453,
          1149,
          1430,
          866,
          1403,
          183,
          193
        ],
        "name": "CryptoColor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "193:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f436f6c6f72",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "164:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56d9b9d718f5ff00ee38b96a72a2f9093c40f362d83c49ba134e7c39cc0dc0a4",
                      "typeString": "literal_string \"CryptoColor\""
                    },
                    "value": "CryptoColor"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "179:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_078788366b6ecceafb28f7483e47ee035ac909126483e270a5b618baad576723",
                      "typeString": "literal_string \"COL\""
                    },
                    "value": "COL"
                  }
                ],
                "id": 9,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1173,
                  "src": "153:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1173_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "153:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:0"
            },
            "scope": 86,
            "src": "138:62:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoColor.Color",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "red",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "229:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "green",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "248:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "248:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "blue",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "269:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Color",
            "nodeType": "StructDefinition",
            "scope": 86,
            "src": "206:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "292:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
              "typeString": "struct CryptoColor.Color[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 20,
                "name": "Color",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 19,
                "src": "292:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Color_$19_storage_ptr",
                  "typeString": "struct CryptoColor.Color"
                }
              },
              "id": 21,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "292:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoColor.Color[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "336:168:0",
              "statements": [
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "name": "_color",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "346:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                        "typeString": "struct CryptoColor.Color"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 25,
                        "name": "Color",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19,
                        "src": "346:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Color_$19_storage_ptr",
                          "typeString": "struct CryptoColor.Color"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 29,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "380:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "374:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": "uint8"
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "374:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "392:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "386:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "399:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "386:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 37,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "410:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "404:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "404:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323030",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "417:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "src": "404:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 27,
                      "name": "Color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "368:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Color_$19_storage_ptr_$",
                        "typeString": "type(struct CryptoColor.Color storage pointer)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Color_$19_memory",
                      "typeString": "struct CryptoColor.Color memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "346:75:0"
                },
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "431:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "431:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "454:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                            "typeString": "struct CryptoColor.Color memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                            "typeString": "struct CryptoColor.Color memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "colors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "442:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                            "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "442:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Color_$19_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoColor.Color storage ref) returns (uint256)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "442:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "464:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "442:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "431:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1503,
                          "src": "481:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "481:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "493:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1084
                      ],
                      "referencedDeclaration": 1084,
                      "src": "475:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "475:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:0"
            },
            "scope": 86,
            "src": "313:191:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "585:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "603:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 72,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "610:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "603:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "red",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "603:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "619:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 76,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "626:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "green",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "619:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "637:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 80,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "644:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "637:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "637:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 82,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "602:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 69,
                  "id": 83,
                  "nodeType": "Return",
                  "src": "595:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColorFromId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "534:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:9:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "564:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "571:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "578:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "563:21:0"
            },
            "scope": 86,
            "src": "510:150:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 87,
        "src": "97:565:0"
      }
    ],
    "src": "0:662:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/vladislavivanov/Desktop/etherlime-workshop/contracts/CryptoColor.sol",
    "exportedSymbols": {
      "CryptoColor": [
        86
      ]
    },
    "id": 87,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 1174,
        "src": "26:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1173,
              "src": "121:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1173",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "121:10:0"
          }
        ],
        "contractDependencies": [
          183,
          193,
          866,
          1149,
          1173,
          1300,
          1403,
          1430,
          1453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86,
          1173,
          1300,
          1453,
          1149,
          1430,
          866,
          1403,
          183,
          193
        ],
        "name": "CryptoColor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "193:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f436f6c6f72",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "164:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56d9b9d718f5ff00ee38b96a72a2f9093c40f362d83c49ba134e7c39cc0dc0a4",
                      "typeString": "literal_string \"CryptoColor\""
                    },
                    "value": "CryptoColor"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "179:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_078788366b6ecceafb28f7483e47ee035ac909126483e270a5b618baad576723",
                      "typeString": "literal_string \"COL\""
                    },
                    "value": "COL"
                  }
                ],
                "id": 9,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1173,
                  "src": "153:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1173_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "153:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:0"
            },
            "scope": 86,
            "src": "138:62:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoColor.Color",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "red",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "229:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "green",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "248:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "248:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "blue",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "269:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Color",
            "nodeType": "StructDefinition",
            "scope": 86,
            "src": "206:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "292:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
              "typeString": "struct CryptoColor.Color[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 20,
                "name": "Color",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 19,
                "src": "292:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Color_$19_storage_ptr",
                  "typeString": "struct CryptoColor.Color"
                }
              },
              "id": 21,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "292:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoColor.Color[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "336:168:0",
              "statements": [
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "name": "_color",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "346:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                        "typeString": "struct CryptoColor.Color"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 25,
                        "name": "Color",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19,
                        "src": "346:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Color_$19_storage_ptr",
                          "typeString": "struct CryptoColor.Color"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 29,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "380:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "374:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": "uint8"
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "374:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "392:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 31,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "386:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "399:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "386:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 37,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "410:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "404:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "404:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323030",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "417:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "src": "404:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 27,
                      "name": "Color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "368:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Color_$19_storage_ptr_$",
                        "typeString": "type(struct CryptoColor.Color storage pointer)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Color_$19_memory",
                      "typeString": "struct CryptoColor.Color memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "346:75:0"
                },
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "431:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "431:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "454:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                            "typeString": "struct CryptoColor.Color memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Color_$19_memory_ptr",
                            "typeString": "struct CryptoColor.Color memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "colors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "442:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                            "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "442:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Color_$19_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoColor.Color storage ref) returns (uint256)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "442:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "464:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "442:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "431:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1503,
                          "src": "481:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "481:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "493:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1084
                      ],
                      "referencedDeclaration": 1084,
                      "src": "475:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "475:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:0"
            },
            "scope": 86,
            "src": "313:191:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "585:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "603:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 72,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "610:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "603:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "red",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "603:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "619:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 76,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "626:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "green",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "619:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "colors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "637:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Color_$19_storage_$dyn_storage",
                              "typeString": "struct CryptoColor.Color storage ref[] storage ref"
                            }
                          },
                          "id": 80,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "644:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "637:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Color_$19_storage",
                            "typeString": "struct CryptoColor.Color storage ref"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "637:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 82,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "602:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 69,
                  "id": 83,
                  "nodeType": "Return",
                  "src": "595:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColorFromId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "534:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:9:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "564:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "571:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "578:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "563:21:0"
            },
            "scope": 86,
            "src": "510:150:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 87,
        "src": "97:565:0"
      }
    ],
    "src": "0:662:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "0.9.18",
  "updatedAt": "2018-12-14T09:14:27.309Z"
}